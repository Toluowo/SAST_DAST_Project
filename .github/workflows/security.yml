name: Security Scans

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sast:
    name: Static Application Security Testing (SAST)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        working-directory: ./NodeGoat
        run: npm install

      - name: Install SonarScanner
        run: npm install -g sonar-scanner

      - name: Run SonarScanner
        working-directory: ./NodeGoat
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.organization=sast-dast-project \
            -Dsonar.projectKey=Toluowo_SAST_DAST_Project \
            -Dsonar.projectName=SAST_DAST_Project \
            -Dsonar.branch.name=main \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  dast:
    name: Dynamic Application Security Testing (DAST)
    needs: sast
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install NodeGoat dependencies
        working-directory: ./NodeGoat
        run: npm install

      - name: Start NodeGoat app
        working-directory: ./NodeGoat
        run: |
          npm start &
          sleep 30  # give app time to initialize

      - name: Run ZAP Baseline Scan
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run --network="host" -v $(pwd):/zap/wrk/:rw ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:4000 -r zap-report.html || true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html

