name: Security Scans

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: npm install
        working-directory: ./NodeGoat
        run: npm install

      - name: Install SonarScanner
        run: npm install -g sonar-scanner

      - name: Run SonarScanner
        working-directory: ./NodeGoat
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.organization=sast-dast-project \
            -Dsonar.projectKey=Toluowo_SAST_DAST_Project \
            -Dsonar.projectName=SAST_DAST_Project \
            -Dsonar.branch.name=main \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  dast:
    needs: sast
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create output directory
        run: mkdir -p zap-wrk

      - name: Create Docker network
        run: docker network create zap-net

      - name: Start NodeGoat app
        run: |
          docker run -d --name nodegoat \
            --network zap-net \
            -p 4000:4000 \
            ghcr.io/appsecco/nodegoat

      - name: Wait for app to start
        run: sleep 30

      - name: Run ZAP scan
        run: |
          docker run --rm \
            --network zap-net \
            -v ${{ github.workspace }}/zap-wrk:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://nodegoat:4000 -r zap-report.html

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-wrk/zap-report.html

